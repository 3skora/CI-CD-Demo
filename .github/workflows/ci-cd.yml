name: CI/CD Pipeline

# This workflow is triggered on push to the main branch and pull requests to the main branch
on:
  push:
    branches:
      - main
    paths:
      - "app/**"
  pull_request:
    branches:
      - main

jobs:
  # Stage 1: Lint
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  # Stage 2: Test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  # Stage 3: Build
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build

  # Stage 4: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Install Netlify CLI
        run: npm install netlify-cli@latest -g
      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: .next
# {
#   "name": "CI/CD Pipeline",
#   "on": {
#     "push": {
#       "branches": ["main"],
#       "paths": ["app/**"]
#     },
#     "pull_request": {
#       "branches": ["main"]
#     }
#   },
#   "jobs": {
#     "lint": {
#       "runs-on": "ubuntu-latest",
#       "steps": [
#         { "name": "Checkout repository", "uses": "actions/checkout@v3" },
#         { "name": "Setup Node.js", "uses": "actions/setup-node@v3", "with": { "node-version": "20" } },
#         { "name": "Install dependencies", "run": "npm ci" },
#         { "name": "Run ESLint", "run": "npm run lint" }
#       ]
#     },
#     "test": {
#       "runs-on": "ubuntu-latest",
#       "steps": [
#         { "name": "Checkout repository", "uses": "actions/checkout@v3" },
#         { "name": "Setup Node.js", "uses": "actions/setup-node@v3", "with": { "node-version": "20" } },
#         { "name": "Install dependencies", "run": "npm ci" },
#         { "name": "Run tests", "run": "npm test" }
#       ]
#     },
#     "build": {
#       "runs-on": "ubuntu-latest",
#       "needs": ["lint", "test"],
#       "steps": [
#         { "name": "Checkout repository", "uses": "actions/checkout@v3" },
#         { "name": "Setup Node.js", "uses": "actions/setup-node@v3", "with": { "node-version": "20" } },
#         { "name": "Install dependencies", "run": "npm ci" },
#         { "name": "Run build", "run": "npm run build" }
#       ]
#     },
#     "deploy": {
#       "runs-on": "ubuntu-latest",
#       "needs": ["build"],
#       "if": "github.event_name == 'push' && github.ref == 'refs/heads/main'",
#       "steps": [
#         { "name": "Checkout repository", "uses": "actions/checkout@v3" },
#         { "name": "Setup Node.js", "uses": "actions/setup-node@v3", "with": { "node-version": "20" } },
#         { "name": "Install dependencies", "run": "npm ci" },
#         { "name": "Install Netlify CLI", "run": "npm install netlify-cli@latest -g" },
#         {
#           "name": "Deploy to Netlify",
#           "uses": "jsmrcaga/action-netlify-deploy@v2.0.0",
#           "with": {
#             "NETLIFY_AUTH_TOKEN": "${{ secrets.NETLIFY_AUTH_TOKEN }}",
#             "NETLIFY_SITE_ID": "${{ secrets.NETLIFY_SITE_ID }}",
#             "NETLIFY_DEPLOY_TO_PROD": true,
#             "build_directory": ".next"
#           }
#         }
#       ]
#     }
#   }
# }
